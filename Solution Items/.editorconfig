[*.{cs,vb}]
#### 命名样式 ####

# 命名规则

dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# 符号规范

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# 命名样式

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

end_of_line = crlf
tab_width = 4
indent_size = 4

## 使用 throw 表达式
dotnet_diagnostic.IDE0016.severity = error

## 使用对象初始值设定项
dotnet_diagnostic.IDE0017.severity = error

## 使用模式匹配来避免 as 后跟 null 检查
dotnet_diagnostic.IDE0019.severity = error

## 使用模式匹配来避免后跟强制转换的“is”检查
dotnet_diagnostic.IDE0020.severity = error

## 使用集合初始值设定项
dotnet_diagnostic.IDE0028.severity = error

## 可以简化 Null 检查
dotnet_diagnostic.IDE0270.severity = error
dotnet_diagnostic.IDE0029.severity = error
dotnet_diagnostic.IDE0030.severity = error
dotnet_diagnostic.IDE0038.severity = error

## 使用“is null”检查
dotnet_diagnostic.IDE0041.severity = error

## 删除未使用的私有成员
dotnet_diagnostic.IDE0051.severity = error
dotnet_diagnostic.IDE0052.severity = error

## 简化内插
dotnet_diagnostic.IDE0071.severity = error

## 使用复合赋值
dotnet_diagnostic.IDE0054.severity = error
dotnet_diagnostic.IDE0074.severity = error

## 简化条件表达式
dotnet_diagnostic.IDE0075.severity = error

## 将 typeof 转换为 nameof
dotnet_diagnostic.IDE0082.severity = error

## 删除不必要的相等运算符
dotnet_diagnostic.IDE0100.severity = error

## 删除不必要的弃元
dotnet_diagnostic.IDE0110.severity = error

## 使用模式匹配
dotnet_diagnostic.IDE0078.severity = error
dotnet_diagnostic.IDE0260.severity = error
dotnet_diagnostic.CA1069.severity = error
